{"ast":null,"code":"var _jsxFileName = \"/home/excellarate/Desktop/Projects/expenses-tracker/src/components/Expenses/ExpensesChart.js\";\nimport Chart from \"../ChartBar/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const datapoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sept\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n\n  for (const expense in props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    datapoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    datapoints: datapoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","ExpensesChart","props","datapoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["/home/excellarate/Desktop/Projects/expenses-tracker/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import Chart from \"../ChartBar/Chart\";\n\nconst ExpensesChart=props=>{\n    const datapoints=[\n        {label:\"Jan\", value:0},\n        {label:\"Feb\", value:0},\n        {label:\"Mar\", value:0},\n        {label:\"Apr\", value:0},\n        {label:\"May\", value:0},\n        {label:\"Jun\", value:0},\n        {label:\"Jul\", value:0},\n        {label:\"Aug\", value:0},\n        {label:\"Sept\", value:0},\n        {label:\"Oct\", value:0},\n        {label:\"Nov\", value:0},\n        {label:\"Dec\", value:0}\n    ]\n\n    for(const expense in props.expenses){\n        const expenseMonth=expense.date.getMonth();\n        datapoints[expenseMonth].value+=expense.amount\n        \n    }\n    return(\n        <Chart datapoints={datapoints}/>\n    )\n}\n\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,mBAAlB;;;AAEA,MAAMC,aAAa,GAACC,KAAK,IAAE;EACvB,MAAMC,UAAU,GAAC,CACb;IAACC,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CADa,EAEb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CAFa,EAGb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CAHa,EAIb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CAJa,EAKb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CALa,EAMb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CANa,EAOb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CAPa,EAQb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CARa,EASb;IAACD,KAAK,EAAC,MAAP;IAAeC,KAAK,EAAC;EAArB,CATa,EAUb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CAVa,EAWb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CAXa,EAYb;IAACD,KAAK,EAAC,KAAP;IAAcC,KAAK,EAAC;EAApB,CAZa,CAAjB;;EAeA,KAAI,MAAMC,OAAV,IAAqBJ,KAAK,CAACK,QAA3B,EAAoC;IAChC,MAAMC,YAAY,GAACF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAAnB;IACAP,UAAU,CAACK,YAAD,CAAV,CAAyBH,KAAzB,IAAgCC,OAAO,CAACK,MAAxC;EAEH;;EACD,oBACI,QAAC,KAAD;IAAO,UAAU,EAAER;EAAnB;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAxBD;;KAAMF,a;AA0BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}